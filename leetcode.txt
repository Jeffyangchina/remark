aaronyang1230@hotmail.com	yang1230
1. Add Two Numbers
两个单向链表，就是每个节点包含数值的同时还有对下一个节点的指向。
不用for 用迭代器，否则速度很慢（因为从第一个一路算过来 ）。

2、single linked list
迭代相加，进位，如果有一方先到none了，就给next=0,直到双方都到none。

3、Longest Substring Without Repeating Characters
循环比较添加，list.index，如果遇到重复的字符，则从相同的字符下标继续循环
问题：range（）对象是一个迭代器，不能中途修改内容。用while,
trick就是新位置=当前位置减去字符串长度再加上重复字母的位置i=i-remblon+cat

4、Median of Two Sorted Arrays求两个数组的中位数
复杂度logn，就是每次减去相同长度则中位数不变。特别的当遇到偶数时取剩余数组需要把中间两个都留下，
导致了要分奇数和偶数情况。最后直到某个数组的个数等于2，然后合并用sort()

5、最长回文：
在一个字符串中找出最长回文字符串，也是每个字符间插入一个#，总是奇数，然后找最长回文，在最长回文
里的字符的回文数 可以少做比较，因为和对称位置的回文数有关系，要成立一个专门放字符回文数的数组。

6、zagzig将字符串表示成锯齿排列
第一列为n个数，后面都是n-1个数，后面每次翻转(list.reverse()无法回值，直接改的list)第一位都是添加空，记住翻转的次数

7、Given a 32-bit signed integer, reverse digits of an integer.
 x>2**31-1 or x<-2**31

8、正则匹配'.'匹配任何一个。'*'和前面一个可以组成0或多个。
使用二维数组，又对角线向下推广

9、integer to raman:<3999
只有4，9，40，49，400，900是用小数在左边，其余都是小数在右边相加。所以列出一个字典，包含他们
并且从大到小排列，用数值减去一个，则添加相应的字符串，直到不能再减1

10、给定两个有序链表，求合并后的链表：
申明一个新链表，遍历两个链表值，将较小的值放入然后往下遍历，直至结束。使用递归，

11、给一个排序数组（从小到大），将其转换为一棵高度最小的排序二叉树。
使用中间值作为根节点，

12、partiton排序，快排：
取一个数，将比他大的放一边，小的另一边






